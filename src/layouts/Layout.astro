---
import "../styles/global.css";
import { SEO, type SEOProps } from "astro-seo";
import type { Thing } from "schema-dts";

interface Props extends SEOProps {
    keywords?: string[];
    schema?: Thing;
    data?: {
        [k: string]: string
    };
}

const {
          data,
          title       = "BranQR | Transform Your QR Code Experience",
          description = "BranQR is the all-in-one solution to create, customize, and track branded QR codes. Unlock powerful analytics, dynamic redirects, and real-time insights to boost your marketing success.",
          canonical   = "https://branqr.com",
          openGraph   = {
              basic: {
                  image: "https://branqr.com/assets/branqr-hero.webp",
                  title: "BranQR",
                  type:  "website",
                  url:   "https://branqr.com",
              },
          },
          twitter     = {
              card:        "summary_large_image",
              site:        "@BranQR",
              creator:     "@BranQR",
              title:       "BranQR - Transform Your QR Code Experience",
              description: "BranQR is the all-in-one solution to create, customize, and track branded QR codes.",
              image:       "https://branqr.com/assets/branqr-hero.webp",
          },
          keywords    = [
              "BranQR",
              "QR code",
              "branded QR code",
              "QR code analytics",
              "QR code marketing",
              "dynamic QR codes",
              "scan tracking",
              "real-time insights",
          ],
          schema      = {
              "@context":  "https://schema.org",
              "@type":     "WebApplication",
              name:        "Branqr",
              url:         "https://branqr.com",
              image:       "https://branqr.com/assets/logo.png",
              description: "Branqr lets you generate and track branded QR codes and mini-sites with real-time analytics.",
              publisher:   {
                  "@type": "Organization",
                  name:    "Branqr",
                  url:     "https://branqr.com",
              },
          },
      } = Astro.props;
const env = import.meta.env.ENVIRONMENT ?? import.meta.env.MODE ?? "production";
---

<!doctype html>
<html lang="en">
    <head>
        <script is:inline>(
            function(w, d, s, l, i) {
                w[l] = w[l] || [];
                w[l].push({
                    "gtm.start":
                        new Date().getTime(), event: "gtm.js",
                });
                var f = d.getElementsByTagName(s)[0];
                var j = d.createElement(s), dl = l != "dataLayer" ? "&l=" + l : "";
                j.async = true;
                j.src =
                    "https://www.googletagmanager.com/gtm.js?id=" + i + dl;
                f.parentNode.insertBefore(j, f);
            }
        )(window, document, "script", "dataLayer", "GTM-P8ZBJ4JP");</script>
        <meta charset="UTF-8"/>
        <meta name="viewport"
              content="width=device-width, initial-scale=1.0"/>
        <link rel="icon"
              href="/favicon.ico"/>
        <SEO title={ title }
             description={ description }
             canonical={ canonical }
             openGraph={ openGraph }
             twitter={ twitter }/>
        <meta name="robots"
              content="index, follow">
        <meta name="keywords"
              content={ keywords.join(", ") }/>
        <meta name="author"
              content="Branqr">
        <meta name="publisher"
              content="Branqr">
        <meta name="generator"
              content="Branqr">
        <script type="application/ld+json"
                is:inline
                set:html={ JSON.stringify(schema) }/>
        <link rel="sitemap"
              href="/sitemap-index.xml"/>
        <title>
            { title }
        </title>
        <script>
            import Clarity from "@microsoft/clarity";

            Clarity.init("qxd1bknavv");
        </script>
    </head>
    <body {...Object.entries(data ?? {}).reduce((acc, [key, value]) => {
        acc[`data-${key}`] = value;
        return acc;
        }, {} as Record<string, string>)}>
        <noscript>
            <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-P8ZBJ4JP"
                    height="0"
                    width="0"
                    style="display:none;visibility:hidden"></iframe>
        </noscript>
        <slot/>
    </body>
</html>
